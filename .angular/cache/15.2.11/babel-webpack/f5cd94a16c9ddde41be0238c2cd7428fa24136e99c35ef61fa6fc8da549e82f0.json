{"ast":null,"code":"import Single_Choice_Set from '../assets/LPI-2019-1-101d-QA-sc.json';\nimport Multiple_Choice_Set from '../assets/LPI-2019-1-101d-QA-mc.json';\nimport Fill_in_Set from '../assets/LPI-2019-1-101d-QA-fi.json';\nimport All_Set from '../assets/LPI-2019-1-101d-QA-all.json';\nimport * as i0 from \"@angular/core\";\nexport class QserviceService {\n  constructor() {\n    this.questionsSC = Single_Choice_Set;\n    this.questionsMC = Multiple_Choice_Set;\n    this.questionsFi = Fill_in_Set;\n    this.questionsAll = All_Set;\n  }\n  initGibAntw() {\n    this.questionsMC.map(f => f.qanswers.map(a => a.givenans = false));\n    this.questionsSC.map(f => f.qanswers.map(a => a.givenans = false));\n    this.questionsFi.map(f => f.qanswers.map(a => a.givenans = false));\n    this.questionsFi.map(f => f.qgiventxt = '');\n    this.questionsAll.map(f => f.qanswers.map(a => a.givenans = false));\n    this.questionsAll.map(q => q.qgiventxt = '');\n  }\n  getAllQ() {\n    return this.questionsAll;\n  }\n  getSCQ() {\n    return this.questionsSC;\n  }\n  getMCQ() {\n    return this.questionsMC;\n  }\n  getFiQ() {\n    return this.questionsFi;\n  }\n  static {\n    this.ɵfac = function QserviceService_Factory(t) {\n      return new (t || QserviceService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: QserviceService,\n      factory: QserviceService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AAEA,OAAOA,iBAAiB,MAAM,sCAAsC;AACpE,OAAOC,mBAAmB,MAAM,sCAAsC;AACtE,OAAOC,WAAW,MAAM,sCAAsC;AAC9D,OAAOC,OAAO,MAAM,uCAAuC;;AAK3D,OAAM,MAAOC,eAAe;EAH5BC;IAIE,gBAAW,GAAYL,iBAAiB;IACxC,gBAAW,GAAYC,mBAAmB;IAC1C,gBAAW,GAAYC,WAAW;IAClC,iBAAY,GAAYC,OAAO;;EAE/BG,WAAW;IACT,IAAI,CAACC,WAAW,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAACF,GAAG,CAACG,CAAC,IAAIA,CAAC,CAACC,QAAQ,GAAG,KAAK,CAAC,CAAC;IAClE,IAAI,CAACC,WAAW,CAACL,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAACF,GAAG,CAACG,CAAC,IAAIA,CAAC,CAACC,QAAQ,GAAG,KAAK,CAAC,CAAC;IAClE,IAAI,CAACE,WAAW,CAACN,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAACF,GAAG,CAACG,CAAC,IAAIA,CAAC,CAACC,QAAQ,GAAG,KAAK,CAAC,CAAC;IAClE,IAAI,CAACE,WAAW,CAACN,GAAG,CAACC,CAAC,IAAGA,CAAC,CAACM,SAAS,GAAC,EAAE,CAAC;IACxC,IAAI,CAACC,YAAY,CAACR,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAACF,GAAG,CAACG,CAAC,IAAGA,CAAC,CAACC,QAAQ,GAAG,KAAK,CAAC,CAAC;IAClE,IAAI,CAACI,YAAY,CAACR,GAAG,CAACS,CAAC,IAAEA,CAAC,CAACF,SAAS,GAAC,EAAE,CAAC;EAC1C;EAGAG,OAAO;IACL,OAAO,IAAI,CAACF,YAAY;EAC1B;EACAG,MAAM;IACJ,OAAO,IAAI,CAACN,WAAW;EACzB;EACAO,MAAM;IACJ,OAAO,IAAI,CAACb,WAAW;EACzB;EACAc,MAAM;IACJ,OAAO,IAAI,CAACP,WAAW;EACzB;;;uBA3BWV,eAAe;IAAA;EAAA;;;aAAfA,eAAe;MAAAkB,SAAflB,eAAe;MAAAmB,YAFd;IAAM;EAAA","names":["Single_Choice_Set","Multiple_Choice_Set","Fill_in_Set","All_Set","QserviceService","constructor","initGibAntw","questionsMC","map","f","qanswers","a","givenans","questionsSC","questionsFi","qgiventxt","questionsAll","q","getAllQ","getSCQ","getMCQ","getFiQ","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Ruslan\\Desktop\\Source-Code_Meinzer\\src\\app\\qservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Query } from './Interfaces/Interface.q';\nimport Single_Choice_Set from '../assets/LPI-2019-1-101d-QA-sc.json';\nimport Multiple_Choice_Set from '../assets/LPI-2019-1-101d-QA-mc.json';\nimport Fill_in_Set from '../assets/LPI-2019-1-101d-QA-fi.json';\nimport All_Set from '../assets/LPI-2019-1-101d-QA-all.json';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QserviceService {\n  questionsSC: Query[] = Single_Choice_Set\n  questionsMC: Query[] = Multiple_Choice_Set\n  questionsFi: Query[] = Fill_in_Set\n  questionsAll: Query[] = All_Set\n\n  initGibAntw() {\n    this.questionsMC.map(f => f.qanswers.map(a => a.givenans = false))\n    this.questionsSC.map(f => f.qanswers.map(a => a.givenans = false))\n    this.questionsFi.map(f => f.qanswers.map(a => a.givenans = false))\n    this.questionsFi.map(f=> f.qgiventxt='')\n    this.questionsAll.map(f => f.qanswers.map(a=> a.givenans = false))\n    this.questionsAll.map(q=>q.qgiventxt='')\n  }\n\n\n  getAllQ() {\n    return this.questionsAll;\n  }\n  getSCQ() {\n    return this.questionsSC;\n  }\n  getMCQ() {\n    return this.questionsMC;\n  }\n  getFiQ() {\n    return this.questionsFi;\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}